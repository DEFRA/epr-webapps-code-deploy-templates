parameters:
  - name: azureSubscription
    type: string
  - name: solutionFolder
    type: string
    default: ''
  - name: projectFolder
    type: string
    default: ''
  - name: azureContainerRegistryName
    type: string
  - name: imageName
    type: string
    default: rwdeprdevdockerimage
  - name: repositoryName
    type: string
  - name: branchName
    type: string

steps:
  - bash: |
        echo "##vso[task.setvariable variable=branchName;]${{ parameters.branchName }}"
    displayName: "Set new branch name"

  - bash: |
        echo "Automated run for $(System.PullRequest.SourceBranch)"
        newBranchNameIs=`echo $(System.PullRequest.SourceBranch) | sed s/"refs\/heads\/"// | sed s/"-"/"_"/g | sed s/"\/"/"_"/g`
        echo newBranchNameIs $newBranchNameIs
        echo "##vso[task.setvariable variable=branchName;]$newBranchNameIs"
    displayName: "Set new branch name if PullRequest"
    condition: eq(variables['Build.Reason'], 'PullRequest')

  - bash: |
        echo "##vso[task.setvariable variable=branchName;]main"
    displayName: "Set new branch name if Merged"
    condition: and( ${{ contains(parameters.branchName, 'refs_pull')  }}, ne(variables['Build.Reason'], 'PullRequest'))

  - task: NuGetAuthenticate@1
    displayName: 'Authenticate to NuGet'

  - task: Docker@2
    displayName: 'Build Docker Database Migrations Image'
    inputs:
      repository: ${{parameters.imageName}}
      command: build
      buildContext:  ${{parameters.solutionFolder}}/BackendAccountService.Data/Scripts/
      dockerfile: ${{parameters.solutionFolder}}/BackendAccountService.Data/Scripts/Dockerfile
      tags: $(Build.BuildNumber)-database-migrations

  - task: AzureCLI@2
    displayName: 'Push Docker Database Migrations Image to ACR'
    inputs:
      azureSubscription: ${{parameters.azureSubscription}}
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        docker images
        az acr login --name ${{parameters.azureContainerRegistryName}}

        if [[ $(branchName) == 'main' ]]
          then
            echo -e "\033[0;32m Procesing MAIN image - adding latest tag to the image's tag"
            docker tag ${{parameters.imageName}}:$(Build.BuildNumber)-database-migrations ${{parameters.azureContainerRegistryName}}.azurecr.io/${{parameters.repositoryName}}:$(branchName)-latest-database-migrations
            docker push ${{parameters.azureContainerRegistryName}}.azurecr.io/${{parameters.repositoryName}}:$(branchName)-latest-database-migrations

            docker tag ${{parameters.imageName}}:$(Build.BuildNumber)-database-migrations ${{parameters.azureContainerRegistryName}}.azurecr.io/${{parameters.repositoryName}}:$(branchName)-$(Build.BuildNumber)-database-migrations
            docker push ${{parameters.azureContainerRegistryName}}.azurecr.io/${{parameters.repositoryName}}:$(branchName)-$(Build.BuildNumber)-database-migrations

        elif [[ $(branchName) == releases* ]]
          then
            echo -e "\033[0;32m Procesing RELEASES image"
            docker tag ${{parameters.imageName}}:$(Build.BuildNumber)-database-migrations ${{parameters.azureContainerRegistryName}}.azurecr.io/${{parameters.repositoryName}}:$(branchName)-database-migrations
            docker push ${{parameters.azureContainerRegistryName}}.azurecr.io/${{parameters.repositoryName}}:$(branchName)-database-migrations

            docker tag ${{parameters.imageName}}:$(Build.BuildNumber)-database-migrations ${{parameters.azureContainerRegistryName}}.azurecr.io/${{parameters.repositoryName}}:$(branchName)-$(Build.BuildNumber)-database-migrations
            docker push ${{parameters.azureContainerRegistryName}}.azurecr.io/${{parameters.repositoryName}}:$(branchName)-$(Build.BuildNumber)-database-migrations
        else
            docker tag ${{parameters.imageName}}:$(Build.BuildNumber)-database-migrations ${{parameters.azureContainerRegistryName}}.azurecr.io/${{parameters.repositoryName}}:$(branchName)-$(Build.BuildNumber)-database-migrations
            docker push ${{parameters.azureContainerRegistryName}}.azurecr.io/${{parameters.repositoryName}}:$(branchName)-$(Build.BuildNumber)-database-migrations
        fi

  - bash: |
        echo "Source branch:"
        echo ${{variables['Build.SourceBranch']}}
        echo " "

        echo "Name of the image pushed to Azure Container Registry:"
        if [[ $(branchName) == 'main' ]]
          then
            echo -e "\033[0;32m $(branchName)-latest-database-migrations"
            echo -e "\033[0;32m $(branchName)-$(Build.BuildNumber)-database-migrations"
        elif [[ $(branchName) == releases* ]]
          then
            echo -e "\033[0;32m $(branchName)-database-migrations"
            echo -e "\033[0;32m $(branchName)-$(Build.BuildNumber)-database-migrations"
        else
            echo -e "\033[0;32m $(branchName)-$(Build.BuildNumber)-database-migrations"
        fi
    displayName: "NAME OF THE IMAGE"