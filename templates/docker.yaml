parameters:
  - name: azureSubscription
    type: string
  - name: solutionFolder
    type: string
    default: ''
  - name: projectFolder
    type: string
    default: ''
  - name: componentDirectory
    type: string
    default: ''
  - name: azureContainerRegistryName
    type: string
  - name: imageName
    type: string
    default: rwdeprdevdockerimage
  - name: repositoryName
    type: string
  - name: branchName
    type: string

steps:
  - bash: |
        echo "##vso[task.setvariable variable=branchName;]${{ parameters.branchName }}"
    displayName: "Set new branch name"

  - bash: |
        echo "##vso[task.setvariable variable=branchName;]main"
    displayName: "Set new branch name if PullRequest"
    condition: ${{ contains(parameters.branchName, 'refs_pull') }}

  - task: NuGetAuthenticate@1
    displayName: 'Authenticate to NuGet'

  - task: Docker@2
    displayName: 'Build Docker Image'
    inputs:
      repository: ${{parameters.imageName}}
      command: build
      buildContext: ${{parameters.solutionFolder}}/${{parameters.componentDirectory}}
      dockerfile: ${{parameters.solutionFolder}}/${{parameters.componentDirectory}}/${{parameters.projectFolder}}/Dockerfile
      tags: $(Build.BuildNumber)
      arguments: '--build-arg PAT=$(VSS_NUGET_ACCESSTOKEN)'

  - task: AzureCLI@2
    displayName: 'Push Docker Image to ACR'
    inputs:
      azureSubscription: ${{parameters.azureSubscription}}
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        docker images
        az acr login --name ${{parameters.azureContainerRegistryName}}
        docker tag ${{parameters.imageName}}:$(Build.BuildNumber) ${{parameters.azureContainerRegistryName}}.azurecr.io/${{parameters.repositoryName}}:$(branchName)-$(Build.BuildNumber)
        docker push ${{parameters.azureContainerRegistryName}}.azurecr.io/${{parameters.repositoryName}}:$(branchName)-$(Build.BuildNumber)
        if [ ${{parameters.branchName}} = 'main' ]
          then
            echo -e "\033[0;32m Adding latest tag to the image"
            docker tag ${{parameters.imageName}}:$(Build.BuildNumber) ${{parameters.azureContainerRegistryName}}.azurecr.io/${{parameters.repositoryName}}:${{parameters.branchName}}-latest
            docker push ${{parameters.azureContainerRegistryName}}.azurecr.io/${{parameters.repositoryName}}:${{parameters.branchName}}-latest
        fi

  - ${{ if startsWith(parameters['branchName'], 'releases') }}:
    - task: AzureCLI@2
      displayName: 'Locking Docker Image if RELEASE'
      inputs:
        azureSubscription: ${{parameters.azureSubscription}}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          docker images
          az acr login --name ${{parameters.azureContainerRegistryName}}
          if [[ $(branchName) == releases* ]]
            then
              echo -e "\033[0;32m This is release branch - setting lock"
              az acr repository update \
              --name ${{parameters.azureContainerRegistryName}} --image ${{parameters.repositoryName}}:$(branchName)-$(Build.BuildNumber) \
              --delete-enabled false --write-enabled false
          fi

  - bash: |
        echo "Name of the image pushed to Azure Container Registry:"
        echo $(branchName)-$(Build.BuildNumber)
    displayName: "NAME OF THE IMAGE"